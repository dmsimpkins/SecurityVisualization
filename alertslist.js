// Generated by CoffeeScript 1.3.3

/*
CSE 8990 Data Visualization
Final Project Daniel Simpkins and Nate Phillips
  Based on a Project by Peter Curtis
*/


(function() {
  var agewidth, colorMap, count, draw, first, h, ipmargin, margin, priorityColors, slidermargin, sliderwidth, thinagewidth, thinh, thinipmargin, thinmargin, thinslidermargin, thinsliderwidth, thinw, toggle, viewheight, w, _asc, _sortBy;

  h = 50;

  w = 400;

  margin = 15;

  toggle = 0;

  _sortBy = 'AGE';

  _asc = 'ASC';

  agewidth = 50;

  sliderwidth = 3;

  slidermargin = 5;

  ipmargin = 7;

  first = 0;

  viewheight = 460;

  if (window.innerHeight) {
    viewheight = window.innerHeight;
  }

  count = Math.floor(viewheight / (h + 2 * slidermargin));

  thinh = 20;

  thinw = 75;

  thinmargin = 3;

  thinagewidth = 30;

  thinsliderwidth = 3;

  thinslidermargin = 2;

  thinipmargin = 3;

  colorMap = ['#2e99c4', '#9fc2e2', '#fdf9cd', '#fc93ba', '#d62028'];

  $('#pageup').attr('disabled', 'disabled');

  $('#pageup50').attr('disabled', 'disabled');

  $('#pagedown').removeAttr('disabled');

  $('#pagedown50').removeAttr('disabled');

  priorityColors = ['#de2d26', '#fc9272', '#fee0d2'];

  window.setDetails = function(alert_id) {
    return d3.json('query_alerts.php?alert_id=' + alert_id, function(json) {
      return window.writeDetails(json.items[0]);
    });
  };

  window.writeDetails = function(alert) {
    var destination, extra, optional, source;
    $('#detail').html(alert.details);
    $('#priority').html('Priority: ' + alert.priority).css('background-color', priorityColors[alert.priority - 1]).css('width', '200px');
    $('#datetime').html('Datetime: ' + alert.date_time);
    source = alert.src_ip;
    if (alert.src_port !== 0) {
      source += ':' + alert.src_port;
    }
    source += ' (' + alert.src_ip_class + ')';
    $('#source').html(source).css('background-color', colorMap[alert.src_ip_type]).css('width', '400px');
    d3.text('query_alerts.php?ip=' + alert.src_ip, function(count) {
      return $('#source_count').html('Number of alerts: ' + count);
    });
    destination = alert.dst_ip;
    if (alert.dst_port !== 0) {
      destination += ':' + alert.dst_port;
    }
    destination += ' (' + alert.dst_ip_class + ')';
    $('#destination').html(destination).css('background-color', colorMap[alert.dst_ip_type]).css('width', '400px');
    d3.text('query_alerts.php?ip=' + alert.dst_ip, function(count) {
      return $('#destination_count').html('Number of alerts: ' + count);
    });
    extra = alert.protocol;
    extra += ' TTL:' + alert.ttl;
    extra += ' ID:' + alert.id;
    extra += ' PacketSize:' + alert.dgmlen;
    $('#extra').html(extra);
    optional = '';
    if (alert.protocol === 'TCP') {
      optional += ' Flags:' + alert.flags;
      optional += ' Seq:' + alert.seq;
      return $('#optional').html(optional);
    }
  };

  window.sort = function() {
    _asc = $("input:radio[name='sortOrder']:checked").val();
    _sortBy = $("input:radio[name='sortByDrop']:checked").val();
    return draw();
  };

  window.toggleView = function() {
    toggle = -toggle + 1;
    d3.selectAll('rect').remove();
    d3.selectAll('text').remove();
    return draw();
  };

  window.scrollUp50 = function() {
    first -= count * 50;
    $('#pagedown').removeAttr('disabled');
    $('#pagedown50').removeAttr('disabled');
    if (first < 0) {
      first = 0;
    }
    if (first === 0) {
      $('#pageup').attr('disabled', 'disabled');
      $('#pageup50').attr('disabled', 'disabled');
    }
    return draw();
  };

  window.scrollUp = function() {
    first -= count;
    $('#pagedown').removeAttr('disabled');
    $('#pagedown50').removeAttr('disabled');
    if (first < 0) {
      first = 0;
    }
    if (first === 0) {
      $('#pageup').attr('disabled', 'disabled');
      $('#pageup50').attr('disabled', 'disabled');
    }
    return draw();
  };

  window.scrollDown = function() {
    first += count;
    $('#pageup').removeAttr('disabled');
    $('#pageup50').removeAttr('disabled');
    if (first > 25743 - count) {
      first = 25743 - count;
    }
    if (first === 25743 - count) {
      $('#pagedown').attr('disabled', 'disabled');
      $('#pagedown50').attr('disabled', 'disabled');
    }
    return draw();
  };

  window.scrollDown50 = function() {
    first += count * 50;
    $('#pageup').removeAttr('disabled');
    $('#pageup50').removeAttr('disabled');
    if (first > 25743 - count) {
      first = 25743 - count;
    }
    if (first === 25743 - count) {
      $('#pagedown').attr('disabled', 'disabled');
      $('#pagedown50').attr('disabled', 'disabled');
    }
    return draw();
  };

  draw = function() {
    var list;
    if (toggle === 0) {
      viewheight = 460;
      if (window.innerHeight) {
        viewheight = window.innerHeight;
      }
      count = Math.floor(viewheight / (h + 2 * slidermargin)) - 1;
      list = d3.select('svg').attr('width', w).attr('height', h * count);
      return d3.json('query_alerts.php?first=' + first + '&count=' + count + '&asc=' + _asc + '&sortBy=' + _sortBy, function(data) {
        var a, b, d, s;
        data = data.items;
        b = list.selectAll('.background').data(data, function(d) {
          return d.alert_id;
        });
        b.enter().append('rect').attr('class', 'background').attr('x', 0).attr('y', function(d, i) {
          return i * h;
        }).attr('width', w).attr('height', h);
        b.exit().remove();
        b.on('mouseover', function(d) {
          return window.setDetails(d.alert_id);
        });
        a = list.selectAll('.ageleft').data(data, function(d) {
          return d.alert_id;
        });
        a.enter().append('rect').attr('class', 'ageleft').attr('x', margin).attr('y', function(d, i) {
          return i * h + margin;
        }).attr('width', function(d) {
          return d.age * agewidth;
        }).attr('height', h - margin * 2);
        a.exit().remove();
        a = list.selectAll('.ageright').data(data, function(d) {
          return d.alert_id;
        });
        a.enter().append('rect').attr('class', 'ageright').attr('x', function(d) {
          return margin + d.age * agewidth;
        }).attr('y', function(d, i) {
          return i * h + margin;
        }).attr('width', function(d) {
          return (1 - d.age) * agewidth;
        }).attr('height', h - margin * 2).style('fill', function(d) {
          return d3.interpolateRgb('black', '#eee')(d.age).toString();
        });
        a.exit().remove();
        s = list.selectAll('.slider').data(data, function(d) {
          return d.alert_id;
        });
        s.enter().append('rect').attr('class', 'slider').attr('x', function(d) {
          return margin + d.age * agewidth - sliderwidth / 2.0;
        }).attr('y', function(d, i) {
          return i * h + margin - slidermargin;
        }).attr('width', sliderwidth).attr('height', h - margin * 2 + slidermargin * 2);
        s.exit().remove();
        $('.slider').tipsy({
          gravity: 'n',
          title: function() {
            var d;
            d = this.__data__;
            return d.date_time;
          }
        });
        s = list.selectAll('.source').data(data, function(d) {
          return d.alert_id;
        });
        s.enter().append('rect').attr('class', 'source').attr('x', margin * 3 + agewidth).attr('y', function(d, i) {
          return h * i + margin;
        }).attr('width', h - margin * 2).attr('height', h - margin * 2).style('fill', function(d) {
          return colorMap[d.src_ip_type];
        });
        s.exit().remove();
        s.on('mouseover', function(d) {
          return window.highlightSource(d.src_ip);
        });
        s.on('mouseout', function() {
          return $('.source').css('stroke', 'black').css('stroke-width', 1);
        });
        $('.source').tipsy({
          gravity: 'n',
          title: function() {
            var d, str;
            d = this.__data__;
            str = d.src_ip;
            if (d.src_port !== 0) {
              str += ':' + d.src_port;
            }
            return str += ' (' + d.src_ip_class + ')';
          }
        });
        d = list.selectAll('.destination').data(data, function(d) {
          return d.alert_id;
        });
        d.enter().append('rect').attr('class', 'destination').attr('x', margin + agewidth + h + ipmargin).attr('y', function(d, i) {
          return h * i + margin;
        }).attr('width', h - margin * 2).attr('height', h - margin * 2).style('fill', function(d) {
          return colorMap[d.dst_ip_type];
        });
        d.exit().remove();
        d.on('mouseover', function(d) {
          return window.highlightDestination(d.dst_ip);
        });
        d.on('mouseout', function() {
          return $('.destination').css('stroke', 'black').css('stroke-width', 1);
        });
        $('.destination').tipsy({
          gravity: 'n',
          title: function() {
            var str;
            d = this.__data__;
            str = d.dst_ip;
            if (d.dst_port !== 0) {
              str += ':' + d.dst_port;
            }
            return str += ' (' + d.dst_ip_class + ')';
          }
        });
        d = list.selectAll('.details').data(data, function(d) {
          return d.alert_id;
        });
        d.enter().append('text').attr('class', 'details').attr('x', margin + agewidth + h * 2 + ipmargin).attr('y', function(d, i) {
          return h * (i + 0.5) + 8;
        }).attr('width', 300).attr('dy', -3).text(function(d) {
          return d.details;
        });
        return d.exit().remove();
      });
    } else {
      viewheight = 460;
      if (window.innerHeight) {
        viewheight = window.innerHeight;
      }
      count = Math.floor(viewheight / (thinh + 2 * thinslidermargin)) - 1;
      list = d3.select('svg').attr('width', thinw).attr('height', thinh * count);
      return d3.json('query_alerts.php?first=' + first + '&count=' + count + '&asc=' + _asc + '&sortBy=' + _sortBy, function(data) {
        var a, b, d, s;
        data = data.items;
        b = list.selectAll('.background').data(data, function(d) {
          return d.alert_id;
        });
        b.enter().append('rect').attr('class', 'background').attr('x', 0).attr('y', function(d, i) {
          return i * thinh;
        }).attr('width', thinw).attr('height', thinh);
        b.exit().remove();
        b.on('click', function(d) {
          return window.setDetails(d.alert_id);
        });
        a = list.selectAll('.ageleft').data(data, function(d) {
          return d.alert_id;
        });
        a.enter().append('rect').attr('class', 'ageleft').attr('x', thinmargin).attr('y', function(d, i) {
          return i * thinh + thinmargin;
        }).attr('width', function(d) {
          return d.age * thinagewidth;
        }).attr('height', thinh - thinmargin * 2);
        a.exit().remove();
        a = list.selectAll('.ageright').data(data, function(d) {
          return d.alert_id;
        });
        a.enter().append('rect').attr('class', 'ageright').attr('x', function(d) {
          return thinmargin + d.age * thinagewidth;
        }).attr('y', function(d, i) {
          return i * thinh + thinmargin;
        }).attr('width', function(d) {
          return (1 - d.age) * thinagewidth;
        }).attr('height', thinh - thinmargin * 2).style('fill', function(d) {
          return d3.interpolateRgb('black', '#eee')(d.age).toString();
        });
        a.exit().remove();
        s = list.selectAll('.slider').data(data, function(d) {
          return d.alert_id;
        });
        s.enter().append('rect').attr('class', 'slider').attr('x', function(d) {
          return thinmargin + d.age * thinagewidth - thinsliderwidth / 2.0;
        }).attr('y', function(d, i) {
          return i * thinh + thinmargin - thinslidermargin;
        }).attr('width', thinsliderwidth).attr('height', thinh - thinmargin * 2 + thinslidermargin * 2);
        s.exit().remove();
        $('.slider').tipsy({
          gravity: 'n',
          title: function() {
            var d;
            d = this.__data__;
            return d.date_time;
          }
        });
        s = list.selectAll('.source').data(data, function(d) {
          return d.alert_id;
        });
        s.enter().append('rect').attr('class', 'source').attr('x', thinmargin * 3 + thinagewidth).attr('y', function(d, i) {
          return thinh * i + thinmargin;
        }).attr('width', thinh - thinmargin * 2).attr('height', thinh - thinmargin * 2).style('fill', function(d) {
          return colorMap[d.src_ip_type];
        });
        s.exit().remove();
        s.on('mouseover', function(d) {
          return window.highlightSource(d.src_ip);
        });
        s.on('mouseout', function() {
          return $('.source').css('stroke', 'black').css('stroke-width', 1);
        });
        $('.source').tipsy({
          gravity: 'n',
          title: function() {
            var d, str;
            d = this.__data__;
            str = d.src_ip;
            if (d.src_port !== 0) {
              str += ':' + d.src_port;
            }
            return str += ' (' + d.src_ip_class + ')';
          }
        });
        d = list.selectAll('.destination').data(data, function(d) {
          return d.alert_id;
        });
        d.enter().append('rect').attr('class', 'destination').attr('x', thinmargin + thinagewidth + thinh + thinipmargin).attr('y', function(d, i) {
          return thinh * i + thinmargin;
        }).attr('width', thinh - thinmargin * 2).attr('height', thinh - thinmargin * 2).style('fill', function(d) {
          return colorMap[d.dst_ip_type];
        });
        d.exit().remove();
        d.on('mouseover', function(d) {
          return window.highlightDestination(d.dst_ip);
        });
        d.on('mouseout', function() {
          return $('.destination').css('stroke', 'black').css('stroke-width', 1);
        });
        $('.destination').tipsy({
          gravity: 'n',
          title: function() {
            var str;
            d = this.__data__;
            str = d.dst_ip;
            if (d.dst_port !== 0) {
              str += ':' + d.dst_port;
            }
            return str += ' (' + d.dst_ip_class + ')';
          }
        });
        d = list.selectAll('.details').data(data, function(d) {
          return d.alert_id;
        });
        return d.exit().remove();
      });
    }
  };

  window.highlightSource = function(ip) {
    $('.source').css('stroke', function() {
      var d;
      d = this.__data__;
      if (d.src_ip === ip) {
        return 'red';
      } else {
        return 'black';
      }
    });
    return $('.source').css('stroke-width', function() {
      var d;
      d = this.__data__;
      if (d.src_ip === ip) {
        return 3;
      } else {
        return 1;
      }
    });
  };

  window.highlightDestination = function(ip) {
    $('.destination').css('stroke', function() {
      var d;
      d = this.__data__;
      if (d.dst_ip === ip) {
        return 'red';
      } else {
        return 'black';
      }
    });
    return $('.destination').css('stroke-width', function() {
      var d;
      d = this.__data__;
      if (d.dst_ip === ip) {
        return 3;
      } else {
        return 1;
      }
    });
  };

  draw();

}).call(this);
